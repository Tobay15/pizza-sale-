DROP TABLE IF EXISTS pizza_sale
CREATE TABLE pizza_sale (
				pizza_id int,
				order_id int,
				pizza_name_id varchar(100),	
				quantity int,	
				order_date	DATE,
				order_time Time DEFAULT CURRENT_TIME,
				unit_price Numeric,
				total_price Numeric,
				pizza_size varchar(10),
				pizza_category varchar(50),
				pizza_ingredients varchar(200),
				pizza_name varchar(50)
);

---Total REVENUE

SELECT SUM(total_price) As Total_Revenue
FROM pizza_sale


-----AVERAGE ORDER VALUE

SELECT SUM(total_price)/ count(DISTINCT order_id) AS  Average_Order_Value
FROM pizza_sale


----Total Pizza Sold

SELECT SUM(quantity) Total_pizza_sold
FROM pizza_sale

----what is the total revenue generated by each type of pizza?

SELECT 
		pizza_name,
		SUM (total_price) AS Total_Revenue
FROM pizza_sale
GROUP BY 
		pizza_name
ORDER BY 
		Total_Revenue DESC;

---- Which pizza is the best-selling based on quantity?

SELECT 
		pizza_name,
		SUM(quantity) AS Total_quantity_sold
FROM pizza_sale
GROUP by 
		pizza_name
ORDER BY 	
		Total_quantity_sold DESC;

---- what is the total revenue generated by each pizza category?

SELECT 		
		pizza_name,
		SUM (total_price) AS Total_Revenue
FROM pizza_sale
GROUP BY
		pizza_name
ORDER BY 
		Total_Revenue DESC;

----How many pizzas were sold by each pizza size

SELECT 
		pizza_size,
		SUM(quantity) AS Total_pizzas_sold
FROM pizza_sale
GROUP by 
		pizza_size
ORDER BY 	
		Total_pizzas_sold DESC;

---- what is the total revenue generated on each day

SELECT 		
		order_date,
		SUM (total_price) AS Total_Revenue
FROM pizza_sale
GROUP BY
		order_date
ORDER BY 
		order_date;

----How many pizzas were sold on each date?

SELECT 
		order_date,
		SUM(quantity) AS Total_pizzas_sold
FROM pizza_sale
GROUP by 
		order_date
ORDER BY 	
		order_date;

----- Which pizza is the most commonly usded?

SELECT 
		pizza_ingredients,
		COUNT(*) AS ingredient_count
FROM pizza_sale
GROUP BY 
		pizza_ingredients
ORDER BY 
		ingredient_count DESC;

---which pizza generates the most revenue?

SELECT 		
		pizza_name,
		SUM (total_price) AS Total_Revenue
FROM pizza_sale
GROUP BY
		pizza_name
ORDER BY 
		Total_Revenue DESC
LIMIT 1;

-----which time day has the highest pizza sales?

SELECT 
		order_time,
		SUM(quantity) AS Total_pizzas_sold
FROM pizza_sale
GROUP by 
		order_time
ORDER BY 	
		Total_pizzas_sold DESC;

----what is the average revenue generated per pizza size

SELECT 	
		pizza_size,
		ROUND(AVG(total_price),3) As AVG_total_Revenue
FROM pizza_sale
GROUP By 	
		pizza_size;

-----How many pizza were sold for each category and size combination?

SELECT 
		pizza_category,
		pizza_size,
		SUM(quantity) AS Total_pizzas_sold
FROM pizza_sale
GROUP by
		pizza_category,
		pizza_size
ORDER BY 	
		Total_pizzas_sold DESC;

---How many total orders are placed each day?

SELECT 
		order_date,
		COUNT(DISTINCT order_id) AS total_orders
FROM pizza_sale
GROUP BY order_date
ORDER BY order_date;

---what is the total revenue generated by each pizza size for each date?

SELECT 
		pizza_size,
		order_date,
		SUM(total_price) AS total_revenue
FROM pizza_sale
GROUP BY pizza_size, order_date
ORDER BY order_date;

---what is the total revenue generated from a specific ingredient e.g pepperoni?

SELECT 
		SUM(total_price) AS Total_Revenue
FROM pizza_sale
WHERE 	
		pizza_ingredients like '%pepperoni%' OR pizza_ingredients like'%Pepperoni%' ;

select pizza_ingredients
FROM pizza_sale

---Which pizza size has the most orders?

SELECT 	
		pizza_size,
		COUNT(DISTINCT order_id) AS Total_orders
FROM  pizza_sale
GROUP BY 	
		pizza_size
ORDER BY 
		Total_orders DESC
LIMIT 1;

-------How is the revenue growing over time per month 

SELECT 
		TO_CHAR(order_date, 'Month') AS Month,
		SUM(total_price) AS total_revenue
FROM pizza_sale
GROUP BY 	
		TO_CHAR(order_date, 'Month')
ORDER BY 
		TO_CHAR(order_date, 'Month');
		
		
------What is the total order daily

SELECT 	
		TO_CHAR(order_date, 'Day') As day_of_week, COUNT(DISTINCT order_id) AS total_orders
FROM pizza_sale
GROUP BY TO_CHAR(order_date, 'Day')
ORDER BY TO_CHAR(order_date, 'Day');

---- Which pizza category generate the nmost revenue?

SELECT 
		pizza_category,
		SUM(total_price) AS total_revenue
FROM pizza_sale
GROUP BY pizza_category
ORDER BY 2 DESC;

----How many orders contain more than one pizza

SELECT COUNT(*) AS multi_pizza_orders
FROM pizza_sale
WHERE quantity >1


